{"version":3,"sources":["pages/Home/styles.ts","services/api.ts","util/format.ts","hooks/useCart.tsx","pages/Home/index.tsx","pages/Cart/styles.ts","pages/Cart/index.tsx","routes.tsx","assets/images/background.svg","styles/global.ts","assets/images/logo.svg","components/Header/styles.ts","components/Header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductList","styled","ul","darken","api","axios","create","baseURL","formatPrice","Intl","NumberFormat","style","currency","format","CartContext","createContext","CartProvider","children","useState","storagedCart","localStorage","getItem","JSON","parse","cart","setCart","addProduct","productId","a","updateCart","productExists","find","product","id","get","stock","stockAmout","data","amount","currentAmount","toast","error","newProduct","push","setItem","stringify","updateProductAmount","Error","Provider","value","removeProduct","productIndex","findIndex","splice","useCart","useContext","Home","products","setProducts","cartItemsAmount","reduce","sumAmount","newSumAmount","useEffect","newData","map","priceFormatted","price","loadProducts","src","image","title","type","onClick","size","color","Container","div","ProductTable","table","lighten","Total","Cart","cartFormatted","subTotal","total","sumTotal","item","alt","disabled","readOnly","Routes","path","exact","component","createGlobalStyle","background","header","Link","Header","cartSize","length","to","logo","App","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.176861f4.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { darken } from 'polished';\r\n\r\nexport const ProductList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 20px;\r\n  list-style: none;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    padding: 20px;\r\n\r\n    img {\r\n      align-self: center;\r\n      max-width: 250px;\r\n    }\r\n\r\n    > strong {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      color: #333;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    > span {\r\n      font-size: 21px;\r\n      font-weight: bold;\r\n      margin: 5px 0 20px;\r\n    }\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      overflow: hidden;\r\n      margin-top: auto;\r\n\r\n      display: flex;\r\n      align-items: center;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, '#7159c1')};\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 12px;\r\n        background: rgba(0, 0, 0, 0.1);\r\n\r\n        svg {\r\n          margin-right: 5px;\r\n        }\r\n      }\r\n\r\n      span {\r\n        flex: 1;\r\n        text-align: center;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:3333\",\r\n});\r\n\r\n\r\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-br', {\r\n  style: 'currency',\r\n  currency: 'BRL',\r\n});\r\n","import { error } from \"console\";\r\nimport { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { api } from \"../services/api\";\r\nimport { Product, Stock } from \"../types\";\r\n\r\ninterface CartProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface UpdateProductAmount {\r\n  productId: number;\r\n  amount: number;\r\n}\r\n\r\ninterface CartContextData {\r\n  cart: Product[];\r\n  addProduct: (productId: number) => Promise<void>;\r\n  removeProduct: (productId: number) => void;\r\n  updateProductAmount: ({ productId, amount }: UpdateProductAmount) => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextData>({} as CartContextData);\r\n\r\nexport function CartProvider({ children }: CartProviderProps): JSX.Element {\r\n  const [cart, setCart] = useState<Product[]>(() => {\r\n    const storagedCart = localStorage.getItem(\"@RocketShoes:cart\");\r\n\r\n    if (storagedCart) {\r\n      return JSON.parse(storagedCart);\r\n    }\r\n\r\n    return [];\r\n  });\r\n\r\n  const addProduct = async (productId: number) => {\r\n    try {\r\n      const updateCart = [...cart];\r\n\r\n      const productExists = updateCart.find((product) => productId === product.id);\r\n\r\n      const stock = await api.get(`/stock/${productId}`);\r\n\r\n      const stockAmout = stock.data.amount;\r\n\r\n      const currentAmount = productExists ? productExists.amount : 0;\r\n\r\n      const amount = currentAmount + 1;\r\n\r\n      if (amount > stockAmout) {\r\n        toast.error(\"Quantidade solicitada fora de estoque\");\r\n        return;\r\n      }\r\n      if (productExists) {\r\n        productExists.amount = amount;\r\n      } else {\r\n        const { data } = await api.get(`/products/${productId}`);\r\n\r\n        const newProduct = {\r\n          ...data,\r\n          amount: 1,\r\n        };\r\n        updateCart.push(newProduct);\r\n      }\r\n\r\n      setCart(updateCart);\r\n      localStorage.setItem(\"@RocketShoes:cart\", JSON.stringify(updateCart));\r\n    } catch {\r\n      toast.error(\"Erro na adição do produto\");\r\n    }\r\n  };\r\n\r\n  const removeProduct = (productId: number) => {\r\n    try {\r\n      const updateCart = [...cart];\r\n\r\n      const productIndex = updateCart.findIndex((product) => productId === product.id);\r\n\r\n      if (productIndex >= 0) {\r\n        updateCart.splice(productIndex, 1);\r\n        setCart(updateCart);\r\n\r\n        localStorage.setItem(\"@RocketShoes:cart\", JSON.stringify(updateCart));\r\n      } else {\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error(\"Erro na remoção do produto\");\r\n    }\r\n  };\r\n\r\n  const updateProductAmount = async ({ productId, amount }: UpdateProductAmount) => {\r\n    try {\r\n      if (amount <= 0) {\r\n        return;\r\n      }\r\n      const stock = await api.get(`/stock/${productId}`);\r\n\r\n      const stockAmout = stock.data.amount;\r\n\r\n      if (amount > stockAmout) {\r\n        toast.error(\"Quantidade solicitada fora de estoque\");\r\n        return;\r\n      }\r\n\r\n      const updateCart = [...cart];\r\n\r\n      const productExists = updateCart.find((product) => product.id === productId);\r\n\r\n      if (productExists) {\r\n        productExists.amount = amount;\r\n        setCart(updateCart);\r\n        localStorage.setItem(\"@RocketShoes:cart\", JSON.stringify(updateCart));\r\n      } else {\r\n        throw Error();\r\n      }\r\n    } catch {\r\n      toast.error(\"Erro na alteração de quantidade do produto\");\r\n    }\r\n  };\r\n\r\n  return <CartContext.Provider value={{ cart, addProduct, removeProduct, updateProductAmount }}>{children}</CartContext.Provider>;\r\n}\r\n\r\nexport function useCart(): CartContextData {\r\n  const context = useContext(CartContext);\r\n\r\n  return context;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MdAddShoppingCart } from \"react-icons/md\";\r\n\r\nimport { ProductList } from \"./styles\";\r\nimport { api } from \"../../services/api\";\r\nimport { formatPrice } from \"../../util/format\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n}\r\n\r\ninterface ProductFormatted extends Product {\r\n  priceFormatted: string;\r\n}\r\n\r\ninterface CartItemsAmount {\r\n  [key: number]: number;\r\n}\r\n\r\nconst Home = (): JSX.Element => {\r\n  const [products, setProducts] = useState<ProductFormatted[]>([]);\r\n  const { addProduct, cart } = useCart();\r\n\r\n  const cartItemsAmount = cart.reduce((sumAmount, product) => {\r\n    const newSumAmount = { ...sumAmount };\r\n\r\n    newSumAmount[product.id] = product.amount;\r\n\r\n    return newSumAmount;\r\n  }, {} as CartItemsAmount);\r\n\r\n  useEffect(() => {\r\n    async function loadProducts() {\r\n      const { data } = await api.get<Product[]>(`/products`);\r\n\r\n      const newData = data.map((product) => {\r\n        return {\r\n          ...product,\r\n          priceFormatted: formatPrice(product.price),\r\n        };\r\n      });\r\n      setProducts(newData);\r\n    }\r\n\r\n    loadProducts();\r\n  }, []);\r\n\r\n  function handleAddProduct(id: number) {\r\n    addProduct(id);\r\n  }\r\n\r\n  return (\r\n    <ProductList>\r\n      {products.map((product) => {\r\n        return (\r\n          <li key={product.id}>\r\n            <img src={product.image} />\r\n            <strong>{product.title}</strong>\r\n            <span>{product.priceFormatted}</span>\r\n            <button type=\"button\" data-testid=\"add-product-button\" onClick={() => handleAddProduct(product.id)}>\r\n              <div data-testid=\"cart-product-quantity\">\r\n                <MdAddShoppingCart size={16} color=\"#FFF\" />\r\n                {cartItemsAmount[product.id] || 0}\r\n              </div>\r\n\r\n              <span>ADICIONAR AO CARRINHO</span>\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ProductList>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport { darken, lighten } from \"polished\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 30px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n\r\n  footer {\r\n    margin-top: 30px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n      background: #7159c1;\r\n      color: #fff;\r\n      border: 0;\r\n      border-radius: 4px;\r\n      padding: 12px 20px;\r\n      font-weight: bold;\r\n      text-transform: uppercase;\r\n      transition: background 0.2s;\r\n\r\n      &:hover {\r\n        background: ${darken(0.06, \"#7159c1\")};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductTable = styled.table`\r\n  width: 100%;\r\n\r\n  thead th {\r\n    color: #999;\r\n    text-align: left;\r\n    padding: 12px;\r\n  }\r\n\r\n  tbody td {\r\n    padding: 12px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  img {\r\n    height: 100px;\r\n  }\r\n\r\n  strong {\r\n    color: #333;\r\n    display: block;\r\n  }\r\n\r\n  span {\r\n    display: block;\r\n    margin-top: 5px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    input {\r\n      border: 1px solid #ddd;\r\n      border-radius: 4px;\r\n      color: #666;\r\n      padding: 6px;\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    background: none;\r\n    border: 0;\r\n    padding: 6px;\r\n\r\n    svg {\r\n      color: #7159c1;\r\n      transition: color 0.2s;\r\n    }\r\n\r\n    &:hover {\r\n      svg {\r\n        color: ${darken(0.06, \"#7159c1\")};\r\n      }\r\n    }\r\n\r\n    &:disabled {\r\n      svg {\r\n        color: ${lighten(0.25, \"#7159c1\")};\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Total = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n\r\n  span {\r\n    color: #999;\r\n    font-weight: bold;\r\n  }\r\n\r\n  strong {\r\n    font-size: 28px;\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { MdDelete, MdAddCircleOutline, MdRemoveCircleOutline } from \"react-icons/md\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\nimport { formatPrice } from \"../../util/format\";\r\n\r\n// import { useCart } from '../../hooks/useCart';\r\n// import { formatPrice } from '../../util/format';\r\nimport { Container, ProductTable, Total } from \"./styles\";\r\n\r\ninterface Product {\r\n  id: number;\r\n  title: string;\r\n  price: number;\r\n  image: string;\r\n  amount: number;\r\n}\r\n\r\nconst Cart = (): JSX.Element => {\r\n  const { cart, removeProduct, updateProductAmount } = useCart();\r\n\r\n  const cartFormatted = cart.map((product) => ({\r\n    ...product,\r\n    priceFormatted: formatPrice(product.price),\r\n    subTotal: formatPrice(product.price * product.amount),\r\n  }));\r\n  const total = formatPrice(\r\n    cart.reduce((sumTotal: number, product: Product) => {\r\n      return (sumTotal += product.price * product.amount);\r\n    }, 0)\r\n  );\r\n\r\n  function handleProductIncrement(product: Product) {\r\n    updateProductAmount({\r\n      productId: product.id,\r\n      amount: product.amount + 1,\r\n    });\r\n  }\r\n\r\n  function handleProductDecrement(product: Product) {\r\n    updateProductAmount({\r\n      productId: product.id,\r\n      amount: product.amount - 1,\r\n    });\r\n  }\r\n\r\n  function handleRemoveProduct(productId: number) {\r\n    removeProduct(productId);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ProductTable>\r\n        <thead>\r\n          <tr>\r\n            <th aria-label=\"product image\" />\r\n            <th>PRODUTO</th>\r\n            <th>QTD</th>\r\n            <th>SUBTOTAL</th>\r\n            <th aria-label=\"delete icon\" />\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cartFormatted.map((item) => {\r\n            return (\r\n              <tr key={item.id} data-testid=\"product\">\r\n                <td>\r\n                  <img src={item.image} alt={item.title} />\r\n                </td>\r\n                <td>\r\n                  <strong>{item.title}</strong>\r\n                  <span>{item.priceFormatted}</span>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <button type=\"button\" data-testid=\"decrement-product\" disabled={item.amount <= 1} onClick={() => handleProductDecrement(item)}>\r\n                      <MdRemoveCircleOutline size={20} />\r\n                    </button>\r\n                    <input type=\"text\" data-testid=\"product-amount\" readOnly value={!item.amount ? 1 : item.amount} />\r\n                    <button type=\"button\" data-testid=\"increment-product\" onClick={() => handleProductIncrement(item)}>\r\n                      <MdAddCircleOutline size={20} />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <strong>{item.subTotal}</strong>\r\n                </td>\r\n                <td>\r\n                  <button type=\"button\" data-testid=\"remove-product\" onClick={() => handleRemoveProduct(item.id)}>\r\n                    <MdDelete size={20} />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </ProductTable>\r\n\r\n      <footer>\r\n        <button type=\"button\">Finalizar pedido</button>\r\n\r\n        <Total>\r\n          <span>TOTAL</span>\r\n          <strong>{total}</strong>\r\n        </Total>\r\n      </footer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Cart from './pages/Cart';\r\n\r\nconst Routes = (): JSX.Element => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/cart\" component={Cart} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/background.72f221ea.svg\";","import { createGlobalStyle } from 'styled-components';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport background from '../assets/images/background.svg';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #191920 url(${background}) no-repeat center top;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font: 14px Roboto, sans-serif;\r\n  }\r\n\r\n  #root {\r\n    max-width: 1020px;\r\n    margin: 0 auto;\r\n    padding: 0 20px 50px;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.a865163d.svg\";","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 50px 0;\r\n\r\n  a {\r\n    transition: opacity 0.2s;\r\n\r\n    &:hover {\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Cart = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n\r\n  div {\r\n    text-align: right;\r\n    margin-right: 10px;\r\n\r\n    strong {\r\n      display: block;\r\n      color: #fff;\r\n    }\r\n\r\n    span {\r\n      font-size: 12px;\r\n      color: #999;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdShoppingBasket } from \"react-icons/md\";\r\n\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport { Container, Cart } from \"./styles\";\r\nimport { useCart } from \"../../hooks/useCart\";\r\n\r\nconst Header = (): JSX.Element => {\r\n  const { cart } = useCart();\r\n  const cartSize = cart.length;\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">\r\n        <img src={logo} alt=\"Rocketshoes\" />\r\n      </Link>\r\n\r\n      <Cart to=\"/cart\">\r\n        <div>\r\n          <strong>Meu carrinho</strong>\r\n          <span data-testid=\"cart-size\">{cartSize === 1 ? `${cartSize} item` : `${cartSize} itens`}</span>\r\n        </div>\r\n        <MdShoppingBasket size={36} color=\"#FFF\" />\r\n      </Cart>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Routes from './routes';\r\nimport GlobalStyles from './styles/global';\r\nimport Header from './components/Header';\r\nimport { CartProvider } from './hooks/useCart';\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <BrowserRouter>\r\n      <CartProvider>\r\n        <GlobalStyles />\r\n        <Header />\r\n        <Routes />\r\n        <ToastContainer autoClose={3000} />\r\n      </CartProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}